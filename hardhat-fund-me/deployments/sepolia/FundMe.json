{
  "address": "0x2824E47dB4AB798049485dD71aA04558B4385bDa",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funderAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeedAddress",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x890aa7b8af79081154cfcb5ad134e25cfdc3b99f31531b3952748b4611b0191e",
  "receipt": {
    "to": null,
    "from": "0xc85a309BbA1859C8297c4AFc5E9a3fd226D8c3Ed",
    "contractAddress": "0x2824E47dB4AB798049485dD71aA04558B4385bDa",
    "transactionIndex": 31,
    "gasUsed": "837207",
    "logsBloom": "0x
    "blockHash": "0xb0744d11d651be2785169804e9d829b6432f78ba2019a3fefd87b811e3ad1e85",
    "transactionHash": "0x890aa7b8af79081154cfcb5ad134e25cfdc3b99f31531b3952748b4611b0191e",
    "logs": [],
    "blockNumber": 3270342,
    "cumulativeGasUsed": "3146602",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 3,
  "solcInputHash": "ed03523bdf2db69e65dfc29cc4341411",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funderAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeedAddress\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"this implements  price feeds as our library \",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Title: Fund Me\\n\\n//SPDX-License-Identifier: MIT\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\npragma solidity ^0.8.8;\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crowd funding */\\n/**@author ejmorian */\\n/**@notice this contract is to demo a funding contract */\\n/**@dev this implements  price feeds as our library */\\ncontract FundMe {\\n  using PriceConverter for uint256;\\n\\n  address public immutable i_owner;\\n  uint256 public constant MINIMUM_USD = 50 * 1e18;\\n  AggregatorV3Interface private s_priceFeedAddress;\\n  address[] private s_funders;\\n  mapping(address => uint256) private s_addressToAmountFunded;\\n\\n  modifier onlyOwner() {\\n    if (msg.sender != i_owner) {\\n      revert FundMe__NotOwner();\\n    }\\n    // require(msg.sender == i_owner, \\\"you are not the deployer\\\");\\n    _;\\n  }\\n\\n  constructor(address _priceFeed) {\\n    s_priceFeedAddress = AggregatorV3Interface(_priceFeed);\\n    i_owner = msg.sender;\\n  }\\n\\n  function fund() public payable {\\n    require(\\n      msg.value.getConversionRate(s_priceFeedAddress) >= MINIMUM_USD,\\n      \\\"Didn't Send Enough Eth\\\"\\n    );\\n\\n    s_funders.push(msg.sender);\\n    s_addressToAmountFunded[msg.sender] = msg.value;\\n  }\\n\\n  // function withdraw() public onlyOwner {\\n  //   for (\\n  //     uint256 funderIndex = 0;\\n  //     funderIndex < s_funders.length;\\n  //     funderIndex++\\n  //   ) {\\n  //     address funder = s_funders[funderIndex];\\n\\n  //     s_addressToAmountFunded[funder] = 0;\\n  //   }\\n\\n  //   s_funders = new address[](0);\\n\\n  //   (bool callSuccess, ) = payable(msg.sender).call{\\n  //     value: address(this).balance\\n  //   }(\\\"\\\");\\n  //   require(callSuccess, \\\"error\\\");\\n  // }\\n\\n  function cheaperWithdraw() public payable onlyOwner {\\n    address[] memory funders = s_funders;\\n    for (uint256 i = 0; i < funders.length; i++) {\\n      address funder = funders[i];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n\\n    (bool callSuccess, ) = payable(msg.sender).call{\\n      value: address(this).balance\\n    }(\\\"\\\");\\n    require(callSuccess, \\\"error\\\");\\n  }\\n\\n  function getPriceFeedAddress() public view returns (AggregatorV3Interface) {\\n    return s_priceFeedAddress;\\n  }\\n\\n  function getFunders(uint _index) public view returns (address) {\\n    return s_funders[_index];\\n  }\\n\\n  function getAddressToAmountFunded(\\n    address _funderAddress\\n  ) public view returns (uint256) {\\n    return s_addressToAmountFunded[_funderAddress];\\n  }\\n}\\n\",\"keccak256\":\"0x674b0c32db8872318b9bf966ca2172896dfdb12fea1fb01311d1d0754ecaa917\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n//import chainlink data feeds ABI\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n  // gets the price of 1ETH to USD\\n  function getPrice(\\n    AggregatorV3Interface priceFeed\\n  ) internal view returns (uint256) {\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    return uint256(answer * 1e10);\\n  }\\n\\n  function getConversionRate(\\n    uint256 _ethAmount,\\n    AggregatorV3Interface priceFeed\\n  ) internal view returns (uint256) {\\n    return ((_ethAmount * getPrice(priceFeed)) / 1e18);\\n  }\\n}\\n\",\"keccak256\":\"0xb070e54adca0351e9b68014bf0a27136b2112de8595b32dacb2c49c4259f4fb6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f1f380380610f1f8339818101604052810190610032919061010f565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505061013c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dc826100b1565b9050919050565b6100ec816100d1565b81146100f757600080fd5b50565b600081519050610109816100e3565b92915050565b600060208284031215610125576101246100ac565b5b6000610133848285016100fa565b91505092915050565b608051610dc161015e6000396000818161037401526106190152610dc16000f3fe6080604052600436106100705760003560e01c80636b69a5921161004e5780636b69a5921461011a578063b60d428814610145578063be2693f01461014f578063dba6335f1461015957610070565b80630343fb25146100755780630f0f30b2146100b25780633a7b6c74146100dd575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610807565b610184565b6040516100a9919061084d565b60405180910390f35b3480156100be57600080fd5b506100c76101cd565b6040516100d491906108c7565b60405180910390f35b3480156100e957600080fd5b5061010460048036038101906100ff919061090e565b6101f6565b604051610111919061094a565b60405180910390f35b34801561012657600080fd5b5061012f61023e565b60405161013c919061084d565b60405180910390f35b61014d61024b565b005b610157610372565b005b34801561016557600080fd5b5061016e610617565b60405161017b919061094a565b60405180910390f35b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061020c5761020b610965565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6802b5e3af16b188000081565b6802b5e3af16b188000061028860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461063b90919063ffffffff16565b10156102c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c0906109f1565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561047b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610431575b5050505050905060005b81518110156105065760008282815181106104a3576104a2610965565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104fe90610a40565b915050610485565b50600067ffffffffffffffff81111561052257610521610a88565b5b6040519080825280602002602001820160405280156105505781602001602082028036833780820191505090505b50600190805190602001906105669291906106fd565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161058d90610ae8565b60006040518083038185875af1925050503d80600081146105ca576040519150601f19603f3d011682016040523d82523d6000602084013e6105cf565b606091505b5050905080610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a90610b49565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000670de0b6b3a764000061064f8361066c565b8461065a9190610b69565b6106649190610bda565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106de9190610c98565b5050509150506402540be400816106f59190610d13565b915050919050565b828054828255906000526020600020908101928215610776579160200282015b828111156107755782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061071d565b5b5090506107839190610787565b5090565b5b808211156107a0576000816000905550600101610788565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107d4826107a9565b9050919050565b6107e4816107c9565b81146107ef57600080fd5b50565b600081359050610801816107db565b92915050565b60006020828403121561081d5761081c6107a4565b5b600061082b848285016107f2565b91505092915050565b6000819050919050565b61084781610834565b82525050565b6000602082019050610862600083018461083e565b92915050565b6000819050919050565b600061088d610888610883846107a9565b610868565b6107a9565b9050919050565b600061089f82610872565b9050919050565b60006108b182610894565b9050919050565b6108c1816108a6565b82525050565b60006020820190506108dc60008301846108b8565b92915050565b6108eb81610834565b81146108f657600080fd5b50565b600081359050610908816108e2565b92915050565b600060208284031215610924576109236107a4565b5b6000610932848285016108f9565b91505092915050565b610944816107c9565b82525050565b600060208201905061095f600083018461093b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4469646e27742053656e6420456e6f7567682045746800000000000000000000600082015250565b60006109db601683610994565b91506109e6826109a5565b602082019050919050565b60006020820190508181036000830152610a0a816109ce565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a4b82610834565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a7d57610a7c610a11565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ad2600083610ab7565b9150610add82610ac2565b600082019050919050565b6000610af382610ac5565b9150819050919050565b7f6572726f72000000000000000000000000000000000000000000000000000000600082015250565b6000610b33600583610994565b9150610b3e82610afd565b602082019050919050565b60006020820190508181036000830152610b6281610b26565b9050919050565b6000610b7482610834565b9150610b7f83610834565b9250828202610b8d81610834565b91508282048414831517610ba457610ba3610a11565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610be582610834565b9150610bf083610834565b925082610c0057610bff610bab565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c2a81610c0b565b8114610c3557600080fd5b50565b600081519050610c4781610c21565b92915050565b6000819050919050565b610c6081610c4d565b8114610c6b57600080fd5b50565b600081519050610c7d81610c57565b92915050565b600081519050610c92816108e2565b92915050565b600080600080600060a08688031215610cb457610cb36107a4565b5b6000610cc288828901610c38565b9550506020610cd388828901610c6e565b9450506040610ce488828901610c83565b9350506060610cf588828901610c83565b9250506080610d0688828901610c38565b9150509295509295909350565b6000610d1e82610c4d565b9150610d2983610c4d565b9250828202610d3781610c4d565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d6f57610d6e610a11565b5b8282058414831517610d8457610d83610a11565b5b509291505056fea26469706673582212201611b6888609d392a50bba9db6d9707ef3ad014e083c1fec8aa9fa1e166e6a5b64736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c80636b69a5921161004e5780636b69a5921461011a578063b60d428814610145578063be2693f01461014f578063dba6335f1461015957610070565b80630343fb25146100755780630f0f30b2146100b25780633a7b6c74146100dd575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610807565b610184565b6040516100a9919061084d565b60405180910390f35b3480156100be57600080fd5b506100c76101cd565b6040516100d491906108c7565b60405180910390f35b3480156100e957600080fd5b5061010460048036038101906100ff919061090e565b6101f6565b604051610111919061094a565b60405180910390f35b34801561012657600080fd5b5061012f61023e565b60405161013c919061084d565b60405180910390f35b61014d61024b565b005b610157610372565b005b34801561016557600080fd5b5061016e610617565b60405161017b919061094a565b60405180910390f35b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061020c5761020b610965565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6802b5e3af16b188000081565b6802b5e3af16b188000061028860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461063b90919063ffffffff16565b10156102c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c0906109f1565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561047b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610431575b5050505050905060005b81518110156105065760008282815181106104a3576104a2610965565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104fe90610a40565b915050610485565b50600067ffffffffffffffff81111561052257610521610a88565b5b6040519080825280602002602001820160405280156105505781602001602082028036833780820191505090505b50600190805190602001906105669291906106fd565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161058d90610ae8565b60006040518083038185875af1925050503d80600081146105ca576040519150601f19603f3d011682016040523d82523d6000602084013e6105cf565b606091505b5050905080610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a90610b49565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000670de0b6b3a764000061064f8361066c565b8461065a9190610b69565b6106649190610bda565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106de9190610c98565b5050509150506402540be400816106f59190610d13565b915050919050565b828054828255906000526020600020908101928215610776579160200282015b828111156107755782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061071d565b5b5090506107839190610787565b5090565b5b808211156107a0576000816000905550600101610788565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107d4826107a9565b9050919050565b6107e4816107c9565b81146107ef57600080fd5b50565b600081359050610801816107db565b92915050565b60006020828403121561081d5761081c6107a4565b5b600061082b848285016107f2565b91505092915050565b6000819050919050565b61084781610834565b82525050565b6000602082019050610862600083018461083e565b92915050565b6000819050919050565b600061088d610888610883846107a9565b610868565b6107a9565b9050919050565b600061089f82610872565b9050919050565b60006108b182610894565b9050919050565b6108c1816108a6565b82525050565b60006020820190506108dc60008301846108b8565b92915050565b6108eb81610834565b81146108f657600080fd5b50565b600081359050610908816108e2565b92915050565b600060208284031215610924576109236107a4565b5b6000610932848285016108f9565b91505092915050565b610944816107c9565b82525050565b600060208201905061095f600083018461093b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4469646e27742053656e6420456e6f7567682045746800000000000000000000600082015250565b60006109db601683610994565b91506109e6826109a5565b602082019050919050565b60006020820190508181036000830152610a0a816109ce565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a4b82610834565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a7d57610a7c610a11565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ad2600083610ab7565b9150610add82610ac2565b600082019050919050565b6000610af382610ac5565b9150819050919050565b7f6572726f72000000000000000000000000000000000000000000000000000000600082015250565b6000610b33600583610994565b9150610b3e82610afd565b602082019050919050565b60006020820190508181036000830152610b6281610b26565b9050919050565b6000610b7482610834565b9150610b7f83610834565b9250828202610b8d81610834565b91508282048414831517610ba457610ba3610a11565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610be582610834565b9150610bf083610834565b925082610c0057610bff610bab565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c2a81610c0b565b8114610c3557600080fd5b50565b600081519050610c4781610c21565b92915050565b6000819050919050565b610c6081610c4d565b8114610c6b57600080fd5b50565b600081519050610c7d81610c57565b92915050565b600081519050610c92816108e2565b92915050565b600080600080600060a08688031215610cb457610cb36107a4565b5b6000610cc288828901610c38565b9550506020610cd388828901610c6e565b9450506040610ce488828901610c83565b9350506060610cf588828901610c83565b9250506080610d0688828901610c38565b9150509295509295909350565b6000610d1e82610c4d565b9150610d2983610c4d565b9250828202610d3781610c4d565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d6f57610d6e610a11565b5b8282058414831517610d8457610d83610a11565b5b509291505056fea26469706673582212201611b6888609d392a50bba9db6d9707ef3ad014e083c1fec8aa9fa1e166e6a5b64736f6c63430008120033",
  "devdoc": {
    "details": "this implements  price feeds as our library ",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeedAddress",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}